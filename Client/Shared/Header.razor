@using BlazorApp.Shared;

@inject NavigationManager NavigationManager

@if (!_currentUrl.Contains("gestion"))
{
    <nav class="navbar navbar-expand-lg navbar-light shadow">
        <div class="container d-flex justify-content-between align-items-center">
            <a class="navbar-brand text-success logo h1 align-self-center" href="/">
                @_shopName
            </a>
            <button class="navbar-toggler border-0 @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#templatemo_main_nav"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="align-self-center collapse navbar-collapse flex-fill d-lg-flex justify-content-lg-between @NavBarCssClass" id="templatemo_main_nav" @onclick="ToggleNavMenu">
                <div class="flex-fill">
                    <ul class="nav navbar-nav d-flex justify-content-between mx-lg-auto">
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="about">About</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="shop">Shop</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="contact">Contact</NavLink>
                        </li>
                    </ul>
                </div>
                @*<div class="navbar align-self-center d-flex">
            <div class="d-lg-none flex-sm-fill mt-3 mb-4 col-7 col-sm-auto pr-3">
            <div class="input-group">
            <input type="text" class="form-control" id="inputMobileSearch" placeholder="Search ...">
            <div class="input-group-text">
            <i class="fa fa-fw fa-search"></i>
            </div>
            </div>
            </div>
            <a class="nav-icon d-none d-lg-inline" href="#" data-bs-toggle="modal" data-bs-target="#templatemo_search">
            <i class="fa fa-fw fa-search text-dark mr-2"></i>
            </a>
            <a class="nav-icon position-relative text-decoration-none" href="#">
            <i class="fa fa-fw fa-cart-arrow-down text-dark mr-1"></i>
            <span class="position-absolute top-0 left-100 translate-middle badge rounded-pill bg-light text-dark">7</span>
            </a>
            <a class="nav-icon position-relative text-decoration-none" href="#">
            <i class="fa fa-fw fa-user text-dark mr-3"></i>
            <span class="position-absolute top-0 left-100 translate-middle badge rounded-pill bg-light text-dark">+99</span>
            </a>
            </div>*@
            </div>
        </div>
    </nav>
}
else
{
    <footer class="bg-dark"></footer>
}

@code {

    [CascadingParameter(Name = "DataSwanShop")]
    protected SwanShop? data { get; set; }   

    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    private string _currentUrl = string.Empty;

    private string _shopName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _currentUrl = NavigationManager.Uri.Replace(NavigationManager.BaseUri, string.Empty).ToLower();
    }

    protected override void OnParametersSet()
    {
        if (data != null && data.Configs != null && data.Configs.Count > 0)
        {
            var indexConfigs = data.Configs.Where(x => !string.IsNullOrEmpty(x.Route) && x.Route == "Index");
            if (indexConfigs.Count() > 0)
            {
                foreach (var item in indexConfigs)
                {
                    if (item.Properties != null && item.Properties.Count > 0)
                    {
                        var configShopName = item.Properties.Where(x => x.Name == "ShopName").FirstOrDefault();
                        if (configShopName != null)
                            _shopName = configShopName.Value;
                    }
                }
            }

            //StateHasChanged();
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
