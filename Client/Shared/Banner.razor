@using BlazorApp.Shared;
@inject NavigationManager NavigationManager

<MudCarousel id="@ClsCommon.IndexCarouselId"
             Class="mud-width-full carousel slide"
             Style="@_carouselStyle"
             ShowArrows="_carouselShowArrows"
             ShowBullets="_carouselShowBullets"
             EnableSwipeGesture="_carouselEnableSwipeGesture"
             AutoCycle="_carouselAutoCycle" TData="object">
    <MudCarouselItem Transition="Transition.Slide">
        <div class="container">
            <div class="row p-5">
                <div class="mx-auto col-md-8 col-lg-6 order-lg-last">
                    <img class="img-fluid" src="./assets/img/banner_img_01.jpg" alt="">
                </div>
                <div class="col-lg-6 mb-0 d-flex align-items-center">
                    <div class="text-align-left align-self-center">
                        <h3 class="h2"><i class="fa fa-star"></i>Welcome to my shop<i class="fa fa-star"></i></h3>
                        <p>
                            Where you can buy DIRECTLY all of my works. <br />
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="Transition.Slide">
        <div class="container">
            <div class="row p-5">
                <div class="mx-auto col-md-8 col-lg-6 order-lg-last">
                    <img class="img-fluid" src="./assets/img/banner_img_02.jpg" alt="">
                </div>
                <div class="col-lg-6 mb-0 d-flex align-items-center">
                    <div class="text-align-left">
                        <p>
                            It means cheapers, always best quality, and it give me a very true value of supporting my job. <br />
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="Transition.Slide">
        <div class="container">
            <div class="row p-5">
                <div class="mx-auto col-md-8 col-lg-6 order-lg-last">
                    <img class="img-fluid" src="./assets/img/banner_img_03.jpg" alt="">
                </div>
                <div class="col-lg-6 mb-0 d-flex align-items-center">
                    <div class="text-align-left">
                        <p>
                            You can also offer me a commission too<i class="fa fa-face-smile"></i>
                            <br />
                            <br />
                            Thank you so much for coming here <i class="fa fa-heart"></i>. <br />
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </MudCarouselItem>
</MudCarousel>

@code {
    [CascadingParameter(Name = "DataSwanShop")]
    private SwanShop? Data { get; set; }

    //private IdConfiguration _configBanner = null;

    private string _shopName = string.Empty;

    private string _carouselStyle = string.Empty;

    private bool _carouselShowArrows = false;
    private bool _carouselShowBullets = false;
    private bool _carouselEnableSwipeGesture = false;
    private bool _carouselAutoCycle = false;

    protected override void OnParametersSet()
    {
        var currentUrl = NavigationManager.Uri.Replace(NavigationManager.BaseUri, string.Empty);

        //Data = await Http.GetFromJsonAsync<SwanShop>($"/api/GetData");
        if (Data != null && Data.Configs != null && Data.Configs.Count > 0)
        {
            var indexConfigs = Data.Configs.Where(x => string.IsNullOrEmpty(x.Route) || x.Route == "Index");
            //if (indexConfigs.Count() > 0)
            //{
            //    foreach (var item in indexConfigs)
            //    {
            //        if (item.Properties != null && item.Properties.Count > 0)
            //        {
            //            var configShopName = item.Properties.Where(x => x.Name == "ShopName").FirstOrDefault();
            //            if (configShopName != null)
            //                _shopName = configShopName.Value;
            //        }

            //        if (item.SpecificIdProperties != null && item.SpecificIdProperties.Count() > 0)
            //        {
            //            var configCarousel = item.SpecificIdProperties.Where(x => x.Id == ClsCommon.IndexCarouselId).FirstOrDefault();
            //            if (configCarousel != null && configCarousel.Properties != null && configCarousel.Properties.Count() > 0)
            //            {
            //                _carouselStyle = configCarousel.Properties.Where(x => x.Name == "Style").FirstOrDefault()?.Value.Replace("|", ";") ?? string.Empty;

            //                var valueShowArrows = configCarousel.Properties.Where(x => x.Name == "ShowArrows").FirstOrDefault()?.Value ?? "0";
            //                _carouselShowArrows = valueShowArrows == "1" ? true : false;

            //                var valueShowBullets = configCarousel.Properties.Where(x => x.Name == "ShowBullets").FirstOrDefault()?.Value ?? "0";
            //                _carouselShowBullets = valueShowBullets == "1" ? true : false;

            //                var valueEnableSwipeGesture = configCarousel.Properties.Where(x => x.Name == "EnableSwipeGesture").FirstOrDefault()?.Value ?? "0";
            //                _carouselEnableSwipeGesture = valueEnableSwipeGesture == "1" ? true : false;

            //                var valueAutoCycle = configCarousel.Properties.Where(x => x.Name == "AutoCycle").FirstOrDefault()?.Value ?? "0";
            //                _carouselAutoCycle = valueAutoCycle == "1" ? true : false;
            //            }
            //        }
            //    }
            //}
        }
    }
}
