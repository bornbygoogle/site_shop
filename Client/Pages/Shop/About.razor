@using BlazorApp.Shared;

@inject HttpClient Http
@inject NavigationManager NavigationManager

@page "/about"

<PageTitle>@_pageTitle</PageTitle>

<section class="bg-success py-5">
    <div class="container">
        <div class="row align-items-center py-5">
            <div class="col-md-8 text-white">
                <h1>About Us</h1>
                <p>@_aboutSummary</p>
            </div>
            <div class="col-md-4">
                <img src="assets/img/about-hero.svg" alt="About Hero">
            </div>
        </div>
    </div>
</section>


<section class="container py-5">
    <div class="row text-center pt-5 pb-3">
        <div class="col-lg-6 m-auto">
            <h1 class="h1">Our Services</h1>
            <p>@_aboutServiceSummary</p>
        </div>
    </div>
    <div class="row">

        <div class="col-md-6 col-lg-3 pb-5">
            <div class="h-100 py-5 services-icon-wap shadow">
                <div class="h1 text-success text-center"><i class="fa fa-truck fa-lg"></i></div>
                <h2 class="h5 mt-4 text-center">Delivery Services</h2>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 pb-5">
            <div class="h-100 py-5 services-icon-wap shadow">
                <div class="h1 text-success text-center"><i class="fas fa-exchange-alt"></i></div>
                <h2 class="h5 mt-4 text-center">Shipping & Return</h2>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 pb-5">
            <div class="h-100 py-5 services-icon-wap shadow">
                <div class="h1 text-success text-center"><i class="fa fa-percent"></i></div>
                <h2 class="h5 mt-4 text-center">Promotion</h2>
            </div>
        </div>

        <div class="col-md-6 col-lg-3 pb-5">
            <div class="h-100 py-5 services-icon-wap shadow">
                <div class="h1 text-success text-center"><i class="fa fa-user"></i></div>
                <h2 class="h5 mt-4 text-center">24 Hours Service</h2>
            </div>
        </div>
    </div>
</section>

<section class="bg-light py-5">
    <div class="container my-4">
        <div class="row text-center py-3">
            <div id="summary-service" class="col-lg-6 m-auto">
                <h1 class="h1">Our Brands</h1>
                <p>@_aboutBrandsSummary</p>
            </div>

        </div>
    </div>
</section>

@code
{
    private bool ShowErrors;
    private string Error = "";

    [CascadingParameter(Name = "DataSwanShop")]
    private SwanShop? Data { get; set; }

    private string _pageTitle = string.Empty;
    private string _aboutSummary = string.Empty;
    private string _aboutServiceSummary = string.Empty;
    private string _aboutBrandsSummary = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        //data = await Http.GetFromJsonAsync<SwanShop>($"/api/GetData");
    }

    protected override void OnParametersSet()
    {
        if (Data != null && Data.Configs != null && Data.Configs.Count > 0)
        {
            var currentUrl = NavigationManager.Uri.Replace(NavigationManager.BaseUri, string.Empty).ToLower();
            var aboutConfigs = Data.Configs.Where(x => !string.IsNullOrEmpty(x.Route) && x.Route.ToLower() == currentUrl);
            if (aboutConfigs.Count() > 0)
            {
                foreach (var item in aboutConfigs)
                {
                    //if (item.Properties != null && item.Properties.Count > 0)
                    //{
                    //    var configPageTitle = item.Properties.Where(x => x.Name == nameof(PageTitle)).FirstOrDefault();
                    //    if (configPageTitle != null)
                    //        _pageTitle = configPageTitle.Value;

                    //    var configSummary = item.Properties.Where(x => x.Name == "Summary").FirstOrDefault();
                    //    if (configSummary != null)
                    //        _aboutSummary = configSummary.Value;
                    //}

                    //if (item.SpecificIdProperties != null && item.SpecificIdProperties.Count() > 0)
                    //{
                    //    var configSummaryService = item.SpecificIdProperties.Where(x => x.Id == "summary-service").FirstOrDefault();
                    //    if (configSummaryService != null && configSummaryService.Properties != null && configSummaryService.Properties.Count() > 0)
                    //    {
                    //        var valueIdSummary = configSummaryService.Properties.Where(x => x.Name == "Summary").FirstOrDefault();
                    //        if (valueIdSummary != null)
                    //            _aboutServiceSummary = valueIdSummary.Value;
                    //    }

                    //    var configSummaryBrands = item.SpecificIdProperties.Where(x => x.Id == "summary-brands").FirstOrDefault();
                    //    if (configSummaryBrands != null && configSummaryBrands.Properties != null && configSummaryBrands.Properties.Count() > 0)
                    //    {
                    //        var valueIdSummary = configSummaryBrands.Properties.Where(x => x.Name == "Summary").FirstOrDefault();
                    //        if (valueIdSummary != null)
                    //            _aboutBrandsSummary = valueIdSummary.Value;
                    //    }
                    //}
                }
            }
        }
    }
}
